---
sudo: required
language: cpp

services:
    - xvfb

matrix:
    fast_finish: true
    include:
        - env: BUILD_ENV=ubuntu-bionic INSTALLDEPS=1
          dist: bionic
          # xvfb fails on bionic for some reason
        - env: BUILD_ENV=ubuntu-xenial INSTALLDEPS=1
          dist: xenial
          # xvfb fails on xenial too
        - env: BUILD_ENV=ubuntu-trusty INSTALLDEPS=1 XVFB_RUN=1
          dist: trusty
        - env: BUILD_ENV=mingw-w64 INSTALLDEPS=1
          dist: trusty
        - env: BUILD_ENV=mingw-w32 INSTALLDEPS=1
          dist: trusty
        - env: BUILD_ENV=libretro CXX="ccache g++" CC="ccache gcc"
          dist: trusty
          before_install:
              - sudo apt-get -qqy update
              - sudo apt-get -qqy install build-essential ccache
          script:
              - cd src/libretro
              - make
        - env: BUILD_ENV=mac INSTALLDEPS=1
          os: osx
          osx_image: xcode10.2

before_script:
    - |
        case "$BUILD_ENV" in
            mingw-w64 )
                ARG=MinGW-w64-x86_64
                cmake=/usr/lib/mxe/usr/bin/x86_64-w64-mingw32.static-cmake
            ;;
            mingw-w32 )
                ARG=MinGW-w64-i686
                cmake=/usr/lib/mxe/usr/bin/i686-w64-mingw32.static-cmake
            ;;
            * )
                cmake=cmake
            ;;
        esac
    - |
        if [ -n "$INSTALLDEPS" ]; then
            ./installdeps $ARG
        fi

script:
    - mkdir build
    - cd build
    - "$cmake" .. -DENABLE_SDL=ON
    - make
    - |
        if [ -n "$XVFB_RUN" ]; then
            xvfb-run ./visualboyadvance-m --help
        #elif [ "$BUILD_ENV" = mac ]; then
        #    ./visualboyadvance-m.app/Contents/MacOS/visualboyadvance-m --help
        fi

cache:
    directories:
        - "$HOME/.ccache"

env:
    global:
        - MAKEFLAGS="-j2"

notifications:
    webhooks:
        urls:
            - https://webhooks.gitter.im/e/b273e1f74f164855d115
        on_success: change  # options: [always|never|change] default: always
        on_failure: always  # options: [always|never|change] default: always
        on_start: never     # options: [always|never|change] default: always
