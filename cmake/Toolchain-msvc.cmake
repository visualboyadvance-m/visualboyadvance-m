if(X86_32)
    set(ADDITIONAL_RELEASE_FLAGS "")
else()
    if(CMAKE_CXX_COMPILER_ID STREQUAL MSVC)
        set(ADDITIONAL_RELEASE_FLAGS "/Ob3")
    endif()
endif()

set(ADDITIONAL_FLAGS "")
if(ENABLE_LTO)
    if(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
        set(ADDITIONAL_FLAGS "/GL")
        set(ADDITIONAL_LINKER_FLAGS "/LTCG")
    elseif(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
        string(APPEND ADDITIONAL_RELEASE_FLAGS " -flto -fuse-ld=lld -fsplit-lto-unit")
    endif()
endif()

if(CMAKE_CXX_COMPILER_ID STREQUAL MSVC AND NOT CMAKE_GENERATOR MATCHES "Ninja")
    string(APPEND ADDITIONAL_FLAGS " /MP")
endif()

set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:DEBUG>:Debug>" CACHE INTERNAL "")

set(PREPROCESSOR_FLAGS "/D_FORCENAMELESSUNION /DWIN32_LEAN_AND_MEAN /DWIN32 /D_WINDOWS /D__STDC_LIMIT_MACROS /D__STDC_CONSTANT_MACROS /D_CRT_SECURE_NO_WARNINGS")

set(CMAKE_CXX_FLAGS "/nologo ${PREPROCESSOR_FLAGS} /GR /EHsc /W4 /std:c++17 ${ADDITIONAL_FLAGS}" CACHE STRING "" FORCE)
set(CMAKE_C_FLAGS "/nologo ${PREPROCESSOR_FLAGS} /W4 /std:c11 ${ADDITIONAL_FLAGS}" CACHE STRING "" FORCE)
set(CMAKE_RC_FLAGS "-c65001 /DWIN32" CACHE STRING "" FORCE)

set(CMAKE_CXX_FLAGS_DEBUG "/D_DEBUG /DDEBUG /MTd /ZI /Ob0 /Od /RTC1" CACHE STRING "" FORCE)
set(CMAKE_C_FLAGS_DEBUG "/D_DEBUG /DDEBUG /MTd /ZI /Ob0 /Od /RTC1" CACHE STRING "" FORCE)
set(CMAKE_CXX_FLAGS_RELEASE "/DNDEBUG /MT /O2 /Oi /Gy /Zi ${ADDITIONAL_RELEASE_FLAGS}" CACHE STRING "" FORCE)
set(CMAKE_C_FLAGS_RELEASE "/DNDEBUG /MT /O2 /Oi /Gy /Zi ${ADDITIONAL_RELEASE_FLAGS}" CACHE STRING "" FORCE)
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "/DNDEBUG /MT /O2 /Ob1 /Oi /Gy /Zi" CACHE STRING "" FORCE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO "/DNDEBUG /MT /O2 /Ob1 /Oi /Gy /Zi" CACHE STRING "" FORCE)
set(CMAKE_CXX_FLAGS_MINSIZEREL "/DNDEBUG /MT /O1 /Ob1 /Oi /Gy /Zi" CACHE STRING "" FORCE)
set(CMAKE_C_FLAGS_MINSIZEREL "/DNDEBUG /MT /O1 /Ob1 /Oi /Gy /Zi" CACHE STRING "" FORCE)

foreach(link_var IN ITEMS EXE SHARED MODULE)
    string(APPEND CMAKE_${link_var}_LINKER_FLAGS " ${ADDITIONAL_LINKER_FLAGS}")
    set(CMAKE_${link_var}_LINKER_FLAGS "${CMAKE_${link_var}_LINKER_FLAGS}" CACHE STRING "" FORCE)
    set(CMAKE_${link_var}_LINKER_FLAGS_RELEASE "/DEBUG /INCREMENTAL:NO /OPT:REF /OPT:ICF" CACHE STRING "" FORCE)
endforeach()

include_directories("${CMAKE_SOURCE_DIR}/dependencies/msvc")

if(CMAKE_CXX_COMPILER_ID STREQUAL Clang)
    # TODO: We should update the XAudio headers to build with clang-cl. See
    # https://github.com/visualboyadvance-m/visualboyadvance-m/issues/1021
    add_definitions(-DNO_XAUDIO2)
endif()

list(APPEND CMAKE_TRY_COMPILE_PLATFORM_VARIABLES ENABLE_LTO)
