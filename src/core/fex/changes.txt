File_Extractor Change Log
-------------------------
- Change that might break code.
+ Improvement that is unlikely to break any code.
* Other changes.


File_Extractor 1.0.0 (2009-10-12)
--------------------
- Added fex_stat() which MUST be called before getting current file
information beyond name, like fex_size().

- Changed fex_*() functions to always report error via return value,
rather than sometimes via a parameter. This will break user code that
uses fex_data(), fex_open(), fex_open_type(), and fex_identify_file().
See demos for usage.

- Deprecated C++ interface. Use fex.h and nothing else to access library
from user code.

- Removed archive types (fex_zip_type, etc.) from interface. Use
fex_identify_extension() to get particular type.

- Removed fex_mini.c, unzip.h, and unrarlib.h for now, as maintaining
them was too taxing. If others express desire for them, I can re-add
them.

- Removed fex_scan_only() and fex_read_once(), as they don't improve
performance anymore. Use fex_read() in place of fex_read_once().

- Removed fex_remain(). Use fex_size()-fex_tell() to find number of
bytes remaining.

- Removed fex_set_user_data() and related functions, as they didn't seem
useful to anyone.

- Removed fex_type_t structure from interface and added accessors
instead (fex_type_name(), fex_type_extension()).

+ Improved archive file type determination to reject other archive types
not handled by the library, rather than opening them as binary files.

+ Added Doxygen compatibility to fex.h.

+ Added fex_crc32() to quickly get CRC-32 of current file from archive
header, without having to read entire file to calculate it.

+ Added fex_err_code() to get numeric error code, along with other
helpful error-related functions. Also added more documentation on how to
handle library errors in user code. 

+ Added fex_init() for use in multi-threaded programs.

+ Added fex_seek_arc() to seek to particular file in archive.

+ Added fex_wname() to get Unicode name of current file.

+ Added support for building as DLL.

+ Added support for wide-character file paths on Windows, enabled with
BLARGG_UTF8_PATHS (thanks to byuu for the idea). This is necessary to
support file paths on non-English Windows systems.

+ Started using unit testing during development.

+ Updated to 7-zip 4.65, unrar_core 3.8.5.


File_Extractor 0.4.3 (2008-12-08)
--------------------
* Limited release
